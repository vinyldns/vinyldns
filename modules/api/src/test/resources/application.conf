akka {
  loglevel = "OFF"
  loggers = ["akka.testkit.TestEventListener"]
  log-dead-letters-during-shutdown = off
  log-dead-letters = 0
}

vinyldns {
  active-node-count = 3
  sync-delay = 10000 # 10 second delay for resyncing zone
  color = "blue"
  rest {
    host = "127.0.0.1"
    port = 9000
  }
  crypto {
    type = "vinyldns.core.crypto.NoOpCrypto"
  }

  approved-name-servers = [
    "some.test.ns."
  ]

  # FQDNs / IPs that cannot be modified via VinylDNS
  # regex-list used for all record types except PTR
  # ip-list used exclusively for PTR records
  high-value-domains = {
    regex-list = [
      "high-value-domain.*" # for testing
    ]
    ip-list = [
      # using reverse zones in the vinyldns/bind9 docker image for testing
      "192.0.2.252",
      "192.0.2.253",
      "fd69:27cc:fe91:0:0:0:0:ffff",
      "fd69:27cc:fe91:0:0:0:ffff:0"
    ]
  }

  # types of unowned records that users can access in shared zones
  shared-approved-types = ["A", "AAAA", "CNAME", "PTR"]

  # used for testing only
  string-list-test = ["test"]

  mysql.repositories {
    zone {
      # no additional settings for now
    },
    batch-change {
      # no additional settings for now
    }
  }

  dynamodb.repositories {
    record-set {
      table-name = "recordSetTest"
      provisioned-reads = 30
      provisioned-writes = 20
    }
    record-change {
      table-name = "recordChangeTest"
      provisioned-reads = 30
      provisioned-writes = 20
    }
    zone-change {
      table-name = "zoneChangesTest"
      provisioned-reads = 30
      provisioned-writes = 20
    }
    user {
      table-name = "usersTest"
      provisioned-reads = 30
      provisioned-writes = 20
    }
    group {
      table-name = "groupsTest"
      provisioned-reads = 30
      provisioned-writes = 20
    }
    group-change {
      table-name = "groupChangesTest"
      provisioned-reads = 30
      provisioned-writes = 20
    }
    membership {
      table-name = "membershipTest"
      provisioned-reads = 30
      provisioned-writes = 20
    }
  }
}
