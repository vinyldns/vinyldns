################################################################################################################
# This configuration is used primarily when running re-start or starting Vinyll locally.  The configuration
# presumes a stand-alone Vinyll server with no backend services.
################################################################################################################
akka {
  loglevel = "ERROR"

  # The following settings are required to have Akka logging output to SLF4J and logback; without
  # these, akka will output to STDOUT
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  logger-startup-timeout = 30s
}

akka.http {
  server {
    # The time period within which the TCP binding process must be completed.
    # Set to `infinite` to disable.
    bind-timeout = 5s

    # Show verbose error messages back to the client
    verbose-error-messages = on
  }

  parsing {
    # Spray doesn't like the AWS4 headers
    illegal-header-warnings = on
  }
}

vinyldns {
  data-stores = ["mysql", "dynamodb"]

  mysql {
    settings {
      # see https://github.com/brettwooldridge/HikariCP
      connection-timeout-millis = 1000
      idle-timeout = 10000
      max-lifetime = 600000
      maximum-pool-size = 5
      minimum-idle = 1
      register-mbeans = true
    }

    repositories {
      zone {
        # no additional settings for now
      }
      batch-change {
        # no additional settings for now
      }
      user {

      }
      record-set {

      }
    }
  }

  dynamodb.repositories {
    record-change {
      table-name = "recordChangeTest"
      provisioned-reads = 30
      provisioned-writes = 20
    }
    zone-change {
      table-name = "zoneChangesTest"
      provisioned-reads = 30
      provisioned-writes = 20
    }
    group {
      table-name = "groupsTest"
      provisioned-reads = 30
      provisioned-writes = 20
    }
    group-change {
      table-name = "groupChangesTest"
      provisioned-reads = 30
      provisioned-writes = 20
    }
    membership {
      table-name = "membershipTest"
      provisioned-reads = 30
      provisioned-writes = 20
    }
  }

  sync-delay = 10000 # 10 second delay for resyncing zone

  batch-change-limit = 1000 # Max change limit per batch request

  # this key is used in order to encrypt/decrypt DNS TSIG keys.  We use this dummy one for test purposes, this
  # should be overridden with a real value that is hidden for production deployment
  crypto {
    type = "vinyldns.core.crypto.JavaCrypto"
    secret = "8B06A7F3BC8A2497736F1916A123AA40E88217BE9264D8872597EF7A6E5DCE61"
  }

  # FQDNs / IPs that cannot be modified via VinylDNS
  # regex-list used for all record types except PTR
  # ip-list used exclusively for PTR records
  high-value-domains = {
    regex-list = [
      "high-value-domain.*" # for testing
    ]
    ip-list = [
      # using reverse zones in the vinyldns/bind9 docker image for testing
      "192.0.2.252",
      "192.0.2.253",
      "fd69:27cc:fe91:0:0:0:0:ffff",
      "fd69:27cc:fe91:0:0:0:ffff:0"
    ]
  }

  # types of unowned records that users can access in shared zones
  shared-approved-types = ["A", "AAAA", "CNAME", "PTR"]

  backends = [
    {
      id = "func-test-backend"
      zone-connection {
        name = "vinyldns."
        key-name = "vinyldns."
        key = "nzisn+4G2ldMn0q1CV3vsg=="
        primary-server = "127.0.0.1:19001"
      }
      transfer-connection {
        name = "vinyldns."
        key-name = "vinyldns."
        key = "nzisn+4G2ldMn0q1CV3vsg=="
        primary-server = "127.0.0.1:19001"
      }
    }
  ]
}
