################################################################################################################
# The default configuration values for Vinyl.  All configuration values that we use and process in Vinyl
# MUST have a corresponding value in here in the event that the application is not configured, otherwise
# a ConfigurationMissing exception will be thrown by the typesafe config
################################################################################################################
vinyldns {

  # if we should start up polling for change requests, set this to false for the inactive cluster
  processing-disabled = false

  max-zone-size = 60000 # number of records that can be in a zone

  queue {
    class-name = "vinyldns.sqs.queue.SqsMessageQueueProvider"

    messages-per-poll = 10
    polling-interval = 250.millis
    max-retries = 100 # Max retries for message on queue; currently only applies to MySqlMessageQueue

    settings {
      # AWS access key and secret.
      access-key = "x"
      secret-key = "x"

      # Regional endpoint to make your requests (eg. 'us-west-2', 'us-east-1', etc.). This is the region where your queue is housed.
      signing-region = "x"

      # Endpoint to access queue
      service-endpoint = "http://localhost:19007/"

      # Queue name. Should be used in conjunction with service endpoint, rather than using a queue url which is subject to change.
      queue-name = "vinyldns"
    }
  }

  # approved name servers that are allowable, default to our internal name servers for test
  approved-name-servers = [
    "172.17.42.1.",
    "ns1.parent.com."
  ]

  # color should be green or blue, used in order to do blue/green deployment
  color = "green"

  # version of vinyldns
  base-version = "unset"
  version = ${vinyldns.base-version}

  # time users have to wait to resync a zone
  sync-delay = 600000

  # the host and port that the vinyldns service binds to
  rest {
    host = "127.0.0.1"
    port = 9000
  }

  mysql {
    class-name = "vinyldns.mysql.repository.MySqlDataStoreProvider"

    settings {
      # JDBC Settings, these are all values in scalikejdbc-config, not our own
      # these must be overridden to use MYSQL for production use
      # assumes a docker or mysql instance running locally
      name = "vinyldns"
      driver = "org.mariadb.jdbc.Driver"
      migration-url = "jdbc:mariadb://localhost:19002/?user=root&password=pass"
      url = "jdbc:mariadb://localhost:19002/vinyldns?user=root&password=pass"
      user = "root"
      password = "pass"
    }

    repositories {
      # override with any repos that are running in mysql
    }
  }

  dynamodb {
    class-name = "vinyldns.dynamodb.repository.DynamoDBDataStoreProvider"

    settings {
      key = "vinyldnsTest"
      secret = "notNeededForDynamoDbLocal"
      endpoint = "http://127.0.0.1:19000"
      region = "us-east-1" # note: we are always in us-east-1, but this can be overridden
    }

    repositories {
      # override
    }
  }

  notifiers = []

  email = {
    class-name = "vinyldns.api.notifier.email.EmailNotifierProvider"
    settings = {
      from = "VinylDNS <do-not-reply@vinyldns.io>"
    }
  }

  sns {
    class-name = "vinyldns.api.notifier.sns.SnsNotifierProvider"
    settings {
      topic-arn = "arn:aws:sns:us-east-1:000000000000:batchChanges"
      access-key = "vinyldnsTest"
      secret-key = "notNeededForSnsLocal"
      service-endpoint = "http://127.0.0.1:19006"
      signing-region = "us-east-1"
    }
  }

  defaultZoneConnection {
    name = "vinyldns."
    keyName = "vinyldns."
    key = "nzisn+4G2ldMn0q1CV3vsg=="
    primaryServer = "127.0.0.1:19001"
  }

  defaultTransferConnection {
    name = "vinyldns."
    keyName = "vinyldns."
    key = "nzisn+4G2ldMn0q1CV3vsg=="
    primaryServer = "127.0.0.1:19001"
  }

  batch-change-limit = 1000

  metrics {
    memory {
      log-enabled = false
      log-seconds = 30
    }
  }

  scheduled-changes-enabled = false
  v6-discovery-nibble-boundaries {
    min = 5
    max = 20
  }

  # Global ACLs defaults to an empty list
  global-acl-rules = []
}
