################################################################################################################
# The default configuration values for Vinyll.  All configuration values that we use and process in Vinyl
# MUST have a corresponding value in here in the event that the application is not configured, otherwise
# a ConfigurationMissing exception will be thrown by the typesafe config
################################################################################################################
vinyldns {

  # if we should start up polling for change requests, set this to false for the inactive cluster
  processing-disabled = false

  sqs {
    polling-interval = 250millis
  }

  # approved name servers that are allowable, default to our internal name servers for test
  approved-name-servers = [
    "172.17.42.1.",
    "ns1.parent.com."
  ]

  # color should be green or blue, used in order to do blue/green deployment
  color = "green"

  # version of vinyldns
  version = "unknown"

  # time users have to wait to resync a zone
  sync-delay = 600000

  # the host and port that the vinyldns service binds to
  rest {
    host = "127.0.0.1"
    port = 9000
  }

  data-stores = ["mysql", "dynamodb"]

  mysql {
    type = "vinyldns.api.repository.mysql.MySqlDataStore"

    settings {
      # JDBC Settings, these are all values in scalikejdbc-config, not our own
      # these must be overridden to use MYSQL for production use
      # assumes a docker or mysql instance running locally
      ## TODO will de-nest this, keeping in "default" just to push off changes
      name = "vinyldns"
      default {
        driver = "org.mariadb.jdbc.Driver"
        migrationUrl = "jdbc:mariadb://localhost:19002/?user=root&password=pass"
        url = "jdbc:mariadb://localhost:19002/vinyldns?user=root&password=pass"
        user = "root"
        password = "pass"
        poolInitialSize = 10
        poolMaxSize = 20
        connectionTimeoutMillis = 1000
        maxLifeTime = 600000
      }
    }

    # Repositories that use this data store are listed here
    repositories {
      zone {
        // no additional settings for now
      },
      batchChange {
        // no additional settings for now
      }
    }
  }

  dynamodb {
    type = "vinyldns.api.repository.dynamodb.DynamoDbDataStore"

    settings {
      key = "vinyldnsTest"
      secret = "notNeededForDynamoDbLocal"
      endpoint = "http://127.0.0.1:19000"
      region = "us-east-1" # note: we are always in us-east-1, but this can be overridden
    }

    repositories {
      ## TODO will remove "dynamo" layer when implemeting this fully

      zoneChange {
        dynamo {
          tableName = "zoneChanges"
          provisionedReads = 30
          provisionedWrites = 30
        }
      }
      recordSet {
        dynamo {
          tableName = "recordSet"
          provisionedReads = 30
          provisionedWrites = 30
        }
      }
      recordChange {
        dynamo {
          tableName = "recordChange"
          provisionedReads = 30
          provisionedWrites = 30
        }
      }
      user {
        dynamo {
          tableName = "users"
          provisionedReads = 30
          provisionedWrites = 30
        }
      }
      group {
        dynamo {
          tableName = "groups"
          provisionedReads = 30
          provisionedWrites = 30
        }
      }
      groupChange {
        dynamo {
          tableName = "groupChanges"
          provisionedReads = 30
          provisionedWrites = 30
        }
      }
      membership {
        dynamo {
          tableName = "membership"
          provisionedReads = 30
          provisionedWrites = 30
        }
      }
    }
  }

  defaultZoneConnection {
    name = "vinyldns."
    keyName = "vinyldns."
    key = "nzisn+4G2ldMn0q1CV3vsg=="
    primaryServer = "127.0.0.1:19001"
  }

  defaultTransferConnection {
    name = "vinyldns."
    keyName = "vinyldns."
    key = "nzisn+4G2ldMn0q1CV3vsg=="
    primaryServer = "127.0.0.1:19001"
  }

  batch-change-limit = 20

  # whether user secrets are expected to be encrypted or not
  encrypt-user-secrets = false
}
