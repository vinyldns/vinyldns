akka {
  loglevel = "OFF"
  log-dead-letters-during-shutdown = off
  log-dead-letters = 0
  logger-startup-timeout = 60s
}

vinyldns {
  approved-name-servers = [
    "172.17.42.1."
  ]
  sqs {
    embedded = true
    sqs-credentials = {
      access-key = "x"
      secret-key = "x"
      signing-region = "x"
      service-endpoint = "http://localhost:9324/"
    }
  }

  mysql.repositories {
    zone {
      # no additional settings for now
    },
    batch-change {
      # no additional settings for now
    },
    zone-change {
      # no additional settings for now
    }
  }


  dynamodb.repositories {
    record-set {
      table-name = "recordSetTest"
      provisioned-reads = 30
      provisioned-writes = 20
    }
    record-change {
      table-name = "recordChangeTest"
      provisioned-reads = 30
      provisioned-writes = 20
    }
    zone-change {
      table-name = "zoneChangesTest"
      provisioned-reads = 30
      provisioned-writes = 20
    }
    user {
      table-name = "usersTest"
      provisioned-reads = 30
      provisioned-writes = 20
    }
    group {
      table-name = "groupsTest"
      provisioned-reads = 30
      provisioned-writes = 20
    }
    group-change {
      table-name = "groupChangesTest"
      provisioned-reads = 30
      provisioned-writes = 20
    }
    membership {
      table-name = "membershipTest"
      provisioned-reads = 30
      provisioned-writes = 20
    }
  }

  crypto {
    type = "vinyldns.core.crypto.NoOpCrypto"
  }
}

mysql {
  class-name = "vinyldns.api.repository.mysql.MySqlDataStoreProvider"

  settings {
    # JDBC Settings, these are all values in scalikejdbc-config, not our own
    # these must be overridden to use MYSQL for production use
    # assumes a docker or mysql instance running locally
    name = "vinyldns"
    driver = "org.mariadb.jdbc.Driver"
    migration-url = "jdbc:mariadb://localhost:19002/?user=root&password=pass"
    url = "jdbc:mariadb://localhost:19002/vinyldns?user=root&password=pass"
    user = "root"
    password = "pass"
    # TODO: Research optimal values for settings
    pool-initial-size = 10
    pool-max-size = 20
    connection-timeout-millis = 1000
    max-life-time = 600000
  }

  repositories {
    batch-change {}
    zone {},
    zone-change {},
  }
}

# Global settings
scalikejdbc.global.loggingSQLAndTime.enabled=true
scalikejdbc.global.loggingSQLAndTime.logLevel=error
scalikejdbc.global.loggingSQLAndTime.warningEnabled=true
scalikejdbc.global.loggingSQLAndTime.warningThresholdMillis=1000
scalikejdbc.global.loggingSQLAndTime.warningLogLevel=warn
scalikejdbc.global.loggingSQLAndTime.singleLineMode=false
scalikejdbc.global.loggingSQLAndTime.printUnprocessedStackTrace=false
scalikejdbc.global.loggingSQLAndTime.stackTraceDepth=10
